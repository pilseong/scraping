1. 확장에는 열려있고 수정에는 닫혀 있어라 2. 코드 수정을 하지 않는 방향으로 작성해야 한다. 3. 항상 기능 확장 가능성을 고려하여 설계해야 한다. 4. 확장을 하려면 추상 레이어가 필요하다. 5. 이 원리를 가장 잘 설명해 주는 패턴이 strategy 패턴이다. 아래는 Head First Degisn pattern에 나오는 건데 인터넷에서 찾아서 붙였다. 6. Duck을 확장하기 위해서 FlyBehavior 인터페이스를 사이에 두고 나는 방법에 대한 클래스를 구현하고 있다. 6-1 Duck은 FlyBehavior의 fly()를 호출하면 실제 구현체에 따라서 다른 기능을 사용할 수 있게 된다.